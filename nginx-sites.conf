# Upstream definitions for workflow services
upstream workflow_api {
    server bella-workflow-api:8080;
}

upstream workflow_web {
    server bella-workflow-web:3000;
}

# Upstream definitions for file-api services  
upstream file_api {
    server bella-file-api:8081;
}

upstream file_web {
    server bella-file-web:3000;
}

# Server block for workflow.bella.top
server {
    listen 80;
    listen 443 ssl http2;
    server_name workflow.bella.top;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/workflow-fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/workflow-privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # /api 路径转发到 api 服务的 /v1 (公共API)
    location ^~ /api/ {
        proxy_pass http://workflow_api/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;

        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # /v1 路径直接转发到 api 服务 (直接API访问)
    location ^~ /v1/ {
        proxy_pass http://workflow_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;

        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # /console 路径转发到 api 服务 (控制台API)
    location ^~ /console/ {
        proxy_pass http://workflow_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;
    }

    # Static files and web application
    location / {
        proxy_pass http://workflow_web/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Support for websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Error and access logs
    error_log /var/log/nginx/workflow_error.log;
    access_log /var/log/nginx/workflow_access.log;
}

# Server block for knowledge.bella.top
server {
    listen 80;
    listen 443 ssl http2;
    server_name knowledge.bella.top;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/knowledge-fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/knowledge-privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # 客户端上传文件大小限制
    client_max_body_size 1024M;
    
    # 代理缓冲区设置
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 32 128k;
    proxy_busy_buffers_size 128k;

    # /v1 路径直接转发到 file api 服务
    location ^~ /v1/ {
        proxy_pass http://file_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;

        # 文件上传超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        # 支持大文件上传
        proxy_request_buffering off;
    }

    # /console 路径转发到 file api 服务
    location ^~ /console/ {
        proxy_pass http://file_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;

        # 文件上传超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }

    # 直接访问 file api 服务的根路径
    location ^~ /file/ {
        proxy_pass http://file_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 透传 X-BELLA- 开头的自定义 headers
        proxy_pass_request_headers on;

        # 文件下载超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }

    # 健康检查路径
    location /actuator/health {
        proxy_pass http://file_api/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 其他所有请求转发到 web 服务
    location / {
        proxy_pass http://file_web/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 支持
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Error and access logs
    error_log /var/log/nginx/knowledge_error.log;
    access_log /var/log/nginx/knowledge_access.log;
}